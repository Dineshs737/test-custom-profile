name: Debug README Generation

on:
  workflow_dispatch:

jobs:
  debug-readme:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check existing files
        run: |
          echo "üìÅ Current files in repository:"
          echo "================================"
          ls -la
          echo ""

          if [ -f "README.md" ]; then
            echo "‚úÖ README.md EXISTS"
            echo "Size: $(wc -c < README.md) bytes"
            echo "Lines: $(wc -l < README.md)"
            echo ""
            echo "Content preview:"
            head -n 30 README.md
          else
            echo "‚ùå README.md DOES NOT EXIST"
          fi

          echo ""
          if [ -f "profile.svg" ]; then
            echo "‚úÖ profile.svg EXISTS"
            echo "Size: $(wc -c < profile.svg) bytes"
          else
            echo "‚ùå profile.svg DOES NOT EXIST"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript
        run: |
          npm run build
          echo "‚úÖ Build complete"
          ls -la dist/

      - name: Generate profile with verbose output
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
        run: |
          echo "üöÄ Running generator..."
          echo "Username: $GITHUB_USERNAME"
          echo ""

          npm run generate 2>&1 | tee generation.log

          echo ""
          echo "üìä Generation complete!"

      - name: Check generated files
        run: |
          echo ""
          echo "üìã Checking what was generated:"
          echo "==============================="

          echo "Files in current directory:"
          ls -la
          echo ""

          if [ -f "profile.svg" ]; then
            echo "‚úÖ profile.svg was generated"
            echo "   Size: $(wc -c < profile.svg) bytes"
            echo "   Lines: $(wc -l < profile.svg)"
            echo "   First 5 lines:"
            head -n 5 profile.svg
          else
            echo "‚ùå profile.svg was NOT generated"
          fi

          echo ""

          if [ -f "README.md" ]; then
            echo "‚úÖ README.md was generated"
            echo "   Size: $(wc -c < README.md) bytes"
            echo "   Lines: $(wc -l < README.md)"
            echo ""
            echo "Full content:"
            cat README.md
          else
            echo "‚ùå README.md was NOT generated"
            echo ""
            echo "Checking if there's an error in generation.log:"
            if [ -f "generation.log" ]; then
              cat generation.log
            fi
          fi

      - name: Check file permissions
        run: |
          echo ""
          echo "üîç File permissions:"
          ls -la profile.svg README.md 2>/dev/null || echo "Files don't exist to check permissions"

      - name: Test writing to directory
        run: |
          echo "üß™ Testing write permissions..."
          echo "test" > test-write.txt
          if [ -f "test-write.txt" ]; then
            echo "‚úÖ Directory is writable"
            rm test-write.txt
          else
            echo "‚ùå Cannot write to directory"
          fi

      - name: Show git status
        run: |
          echo ""
          echo "üìù Git status:"
          git status
          echo ""
          echo "Changed files:"
          git diff --name-only

      - name: Attempt to commit (if files exist)
        run: |
          if [ -f "README.md" ] && [ -f "profile.svg" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add README.md profile.svg
            git commit -m "üîß Debug: Add generated files" || echo "No changes to commit"
            git push || echo "Push failed"
          else
            echo "‚ö†Ô∏è  Files not generated, skipping commit"
          fi

      - name: Final diagnostic
        if: always()
        run: |
          echo ""
          echo "üîç Final Diagnostic:"
          echo "==================="
          echo "Current directory: $(pwd)"
          echo ""
          echo "All files:"
          find . -maxdepth 1 -type f ! -name ".*"
          echo ""
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
